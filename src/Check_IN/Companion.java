/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Check_IN;

import LogIn.MessageDialog;
import combo_suggestion.ComboBoxSuggestion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.awt.Color;
import java.util.Locale;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import textfield.TextField;

/**
 *
 * @author ZBOOK
 */
public class Companion extends javax.swing.JPanel {

    /**
     * Creates new form Companion
     */
    public Companion() {
        initComponents();
        this.setBackground(Color.white);
        init();
    }
    JFrame frame;
    int number;
    
    private void init() {
        NameText.setLabelText("Name");
        PhoneText.setLabelText("Phone Number If Exists");
        
        jButton1.setFocusable(false);
        jButton1.setBackground(new Color(215, 209, 209));
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(radioButtonCustom1);
        buttonGroup.add(radioButtonCustom2);  
        
        
        String[] countries = Locale.getISOCountries();
        NationalityComboBox.addItem("Nationality");
        for (int i = 0; i < countries.length; i++) {
            Locale locale = new Locale("", countries[i]);
            NationalityComboBox.addItem(locale.getDisplayCountry());
        }
    }
    public void pass(int num, JFrame f) {
        number = num;
        frame = f;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NameText = new textfield.TextField();
        PhoneText = new textfield.TextField();
        radioButtonCustom1 = new radio_button.RadioButtonCustom();
        radioButtonCustom2 = new radio_button.RadioButtonCustom();
        jButton1 = new javax.swing.JButton();
        NationalityComboBox = new combo_suggestion.ComboBoxSuggestion();

        radioButtonCustom1.setText("Male");

        radioButtonCustom2.setText("Female");

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NameText, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(NationalityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(radioButtonCustom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radioButtonCustom2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(PhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))))
            .addGroup(layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButtonCustom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioButtonCustom2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NationalityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addComponent(jButton1)
                .addContainerGap(71, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        TextField tx[] = {NameText, PhoneText};
        ComboBoxSuggestion combSug[] = {NationalityComboBox};
        int i = 0;
        for(; i < tx.length; i++) {
            if(tx[i].getText().isEmpty()) {
               JOptionPane.showMessageDialog(this, "Fill in Information", "Error", JOptionPane.ERROR_MESSAGE);  
               tx[i].setLineColor(Color.red);
               tx[i].requestFocus();
               break;                
            }
            else {
                tx[i].setLineColor(new Color(3, 155, 216));
            }
            if(i == tx.length - 1) {
                if(!(radioButtonCustom1.isSelected() || radioButtonCustom2.isSelected())) {
                    JOptionPane.showMessageDialog(this, "Fill in Information", "Error", JOptionPane.ERROR_MESSAGE);
                    break;
                }
                else if(combSug[0].getSelectedItem() == "Nationality") {
                    JOptionPane.showMessageDialog(this, "Fill in Nationality", "Error", JOptionPane.ERROR_MESSAGE); 
                    break;
                }
               
        }             
        }
    if(i == tx.length) {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=mydatabase;encrypt=true;trustServerCertificate=true", "sakoury", "12345");
            
            // Get ClientID From Client table
            PreparedStatement pst = conn.prepareStatement("SELECT MAX(ClientID) AS LastClientID FROM Client");
            
            ResultSet rs = pst.executeQuery();
            int clientId = 0;
            if(rs.next()) {
                clientId = rs.getInt("LastClientID");
            }
            // insert into client table
            PreparedStatement pstCompanion = conn.prepareStatement("INSERT INTO Companion (ClientID, Nationality, Phone, Name, Gender) VALUES (?, ?, ?, ?, ?)");
            pstCompanion.setInt(1, clientId);
            pstCompanion.setString(2, (String) NationalityComboBox.getSelectedItem());
            pstCompanion.setString(3, PhoneText.getText());
            pstCompanion.setString(4, NameText.getText());
            if(radioButtonCustom1.isSelected())
                pstCompanion.setBoolean(5, true);
            else if(radioButtonCustom2.isSelected())
                pstCompanion.setBoolean(5, false);
            
            
            pstCompanion.executeUpdate();
            
            new MessageDialog("Saved", this).setVisible(true);
            NameText.setText("");
            PhoneText.setText("");
            NationalityComboBox.setSelectedIndex(0);
            radioButtonCustom1.setSelected(false);
            radioButtonCustom2.setSelected(false);
            this.setVisible(false);
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }  
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private textfield.TextField NameText;
    private combo_suggestion.ComboBoxSuggestion NationalityComboBox;
    private textfield.TextField PhoneText;
    private javax.swing.JButton jButton1;
    private radio_button.RadioButtonCustom radioButtonCustom1;
    private radio_button.RadioButtonCustom radioButtonCustom2;
    // End of variables declaration//GEN-END:variables
}