/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Bill;

import LogIn.MessageDialog;
import MainPanels.CenterPanelChildForm;
import java.awt.Color;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author AhmedMagedMohamedHas
 */

public class BillPanel extends CenterPanelChildForm {

    /**
     * Creates new form BillPanel
     */
    private boolean key=false;
    private java.sql.Connection con;
    private String clientId,roomNumber;
    public BillPanel() {
        initComponents();
        confirmButton.setBackground(new Color(27,132,182));
        cancelButton.setBackground(Color.gray);
        ResultSet rs ;
        String sqlqurey = "SELECT * FROM dbo.Room WHERE Status = "+1+" ";
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Hotel;encrypt=true;trustServerCertificate=true","Admin","1234");
            java.sql.PreparedStatement pst = con.prepareStatement(sqlqurey);
            rs = pst.executeQuery();
            while(rs.next()){
                roomNumberCombo.addItem(rs.getString("Room_Number"));
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        key=true;
        roomNumberCombo.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomNumberCombo = new combobox.Combobox();
        clientInfo1 = new services.ClientInfo();
        scrool2 = new Bill.Scrool();
        jLabel1 = new javax.swing.JLabel();
        totalPaymentLabel = new javax.swing.JLabel();
        confirmButton = new button.Button();
        cancelButton = new button.Button();

        roomNumberCombo.setLabeText("Select Room");
        roomNumberCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                roomNumberComboItemStateChanged(evt);
            }
        });
        roomNumberCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNumberComboActionPerformed(evt);
            }
        });

        scrool2.setBackground(new java.awt.Color(255, 255, 255));
        scrool2.setPreferredSize(new java.awt.Dimension(512, 370));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Total Payment");

        totalPaymentLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        totalPaymentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        confirmButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(totalPaymentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(614, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clientInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(roomNumberCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(scrool2, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(roomNumberCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(clientInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrool2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalPaymentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void roomNumberComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_roomNumberComboItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_roomNumberComboItemStateChanged

    private void roomNumberComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNumberComboActionPerformed
        // TODO add your handling code here:
        ResultSet result ;
        if(key){
            String selRoom = (String)roomNumberCombo.getSelectedItem();
            try{
                
                result = con.prepareStatement("SELECT Client.*, Room.*, Check_In_Out.StartDate\n"
                        + "FROM Client\n"
                        + "JOIN Check_In_Out ON Client.ClientID = Check_In_Out.clientID\n"
                        + "JOIN Room ON Check_In_Out.Room_N = Room.Room_Number\n"
                        + "WHERE Room.Room_Number = " + selRoom +"\n"
                        + "ORDER BY Check_In_Out.StartDate DESC").executeQuery();
                float price = 0f;
                long days = 1L;
                while(result.next()){
                    String gen = "Male";
                    if(result.getString("Gender").equals("0"))
                        gen = "Female";
                    this.clientId = result.getString("ClientID");
                    this.roomNumber = result.getString("Room_Number");
                    LocalDate outDate = LocalDate.now();
                    java.sql.Date tempDate = result.getDate("StartDate");
                    LocalDate inDate = tempDate.toLocalDate();
                    days = ChronoUnit.DAYS.between(inDate, outDate);
                    price = result.getFloat("Price_per_day");
                    clientInfo1.setInfo(this.clientId, result.getString("Name"), result.getString("Nationality"), result.getString("Phone"), gen);
                    break;
                }
                double totalPayment = scrool2.change(Integer.parseInt(clientId),price, days);
                totalPaymentLabel.setText(Double.toString(totalPayment));
            }
            catch(Exception ex){
                System.out.println(ex);
            }
            revalidate();
            
        }
        
        
        
        
    }//GEN-LAST:event_roomNumberComboActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        clientInfo1.setInfo("", "", "", "", "");
        this.clientId = this.roomNumber = null;
        roomNumberCombo.setSelectedIndex(-1);
        scrool2.clear();
        totalPaymentLabel.setText("");
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
       String query = "UPDATE Room\n"
               + "SET Status= 0\n"
               + "WHERE\n"
               + "    Room_Number =" + this.roomNumber;
        try {
            con.prepareStatement(query).executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(BillPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        new MessageDialog("Check out Confirmed",this).setVisible(true);
        cancelButton.doClick();
    }//GEN-LAST:event_confirmButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private button.Button cancelButton;
    private services.ClientInfo clientInfo1;
    private button.Button confirmButton;
    private javax.swing.JLabel jLabel1;
    private combobox.Combobox roomNumberCombo;
    private Bill.Scrool scrool2;
    private javax.swing.JLabel totalPaymentLabel;
    // End of variables declaration//GEN-END:variables
}
